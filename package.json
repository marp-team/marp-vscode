{
  "name": "marp-vscode",
  "displayName": "Marp for VS Code",
  "publisher": "marp-team",
  "version": "0.14.0",
  "description": "Create slide deck written in Marp Markdown on VS Code",
  "categories": [
    "Other"
  ],
  "keywords": [
    "marp",
    "markdown",
    "slide",
    "deck",
    "presentation"
  ],
  "license": "MIT",
  "author": {
    "name": "Marp team",
    "url": "https://github.com/marp-team"
  },
  "contributors": [
    {
      "name": "Yuki Hattori",
      "url": "https://github.com/yhatt"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/marp-team/marp-vscode"
  },
  "engines": {
    "vscode": "^1.43.0"
  },
  "main": "./lib/extension.js",
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#d9edf8",
    "theme": "light"
  },
  "activationEvents": [
    "onLanguage:markdown",
    "onCommand:markdown.marp.export",
    "onCommand:markdown.marp.showQuickPick",
    "onCommand:markdown.marp.toggleMarpPreview"
  ],
  "contributes": {
    "commands": [
      {
        "category": "Marp",
        "command": "markdown.marp.export",
        "title": "Export slide deck..."
      },
      {
        "category": "Marp",
        "command": "markdown.marp.showQuickPick",
        "title": "Show quick pick of Marp commands...",
        "icon": {
          "dark": "./images/icon-dark.svg",
          "light": "./images/icon-light.svg"
        }
      },
      {
        "category": "Marp",
        "command": "markdown.marp.toggleMarpPreview",
        "title": "Toggle Marp preview for current Markdown"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Marp for VS Code",
      "properties": {
        "markdown.marp.breaks": {
          "type": "string",
          "enum": [
            "off",
            "on",
            "inherit"
          ],
          "default": "on",
          "description": "Sets how line-breaks are rendered in Marp Markdown. It can set separately because the default setting of Marp ecosystem is different from VS Code.",
          "markdownEnumDescriptions": [
            "Ignore line-breaks in rendered Marp Markdown preview.",
            "Show line-breaks in rendered Marp Markdown preview. It is the default setting of Marp ecosystem.",
            "Use inherited setting from `markdown.preview.breaks`."
          ]
        },
        "markdown.marp.chromePath": {
          "type": "string",
          "default": "",
          "description": "Sets the custom path for Chrome or Chromium-based browser to export PDF and image. If it's empty, Marp will find out the installed Google Chrome."
        },
        "markdown.marp.enableHtml": {
          "type": "boolean",
          "default": false,
          "description": "Enables all HTML elements in Marp Markdown."
        },
        "markdown.marp.exportType": {
          "type": "string",
          "enum": [
            "html",
            "pdf",
            "pptx",
            "png",
            "jpeg"
          ],
          "default": "pdf",
          "description": "Sets default export type.",
          "enumDescriptions": [
            "HTML slide deck",
            "PDF slide deck",
            "PowerPoint document",
            "PNG image (first slide only)",
            "JPEG image (first slide only)"
          ]
        },
        "markdown.marp.mathTypesetting": {
          "type": "string",
          "enum": [
            "mathjax",
            "katex"
          ],
          "default": "katex",
          "markdownDescription": "Controls math typesetting library for rendering math syntax by [Marp Core](https://github.com/marp-team/marp-core).",
          "markdownEnumDescriptions": [
            "MathJax (https://www.mathjax.org/)",
            "KaTeX (https://katex.org/): The default library in Marp Core"
          ]
        },
        "markdown.marp.themes": {
          "type": "array",
          "default": [],
          "markdownDescription": "A list of URLs or local paths to additional [theme CSS](https://marpit.marp.app/theme-css) for Marp core and Marpit framework. The rule for paths is following [Markdown: Styles](#markdown.styles).",
          "items": {
            "type": "string"
          }
        },
        "markdown.marp.toolbarButtonForQuickPick": {
          "type": "boolean",
          "default": true,
          "description": "Shows editor toolbar button to Markdown document, for accessing quick pick of Marp commands."
        }
      }
    },
    "markdown.markdownItPlugins": true,
    "markdown.previewScripts": [
      "./lib/preview.js"
    ],
    "markdown.previewStyles": [
      "./style.css"
    ],
    "menus": {
      "editor/title": [
        {
          "command": "markdown.marp.showQuickPick",
          "group": "navigation",
          "when": "config.markdown.marp.toolbarButtonForQuickPick && editorLangId == markdown"
        }
      ]
    }
  },
  "private": true,
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard",
      "stylelint-config-prettier"
    ],
    "rules": {
      "selector-type-no-unknown": [
        true,
        {
          "ignoreTypes": [
            "foreignobject"
          ]
        }
      ]
    }
  },
  "jest": {
    "clearMocks": true,
    "collectCoverageFrom": [
      "src/**/*.ts",
      "src/**/*.js"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      ".*\\.d\\.ts"
    ],
    "coverageThreshold": {
      "global": {
        "lines": 95
      }
    },
    "preset": "ts-jest",
    "restoreMocks": true,
    "testEnvironment": "node"
  },
  "scripts": {
    "build": "yarn -s clean && rollup -c ./rollup.config.js",
    "clean": "rimraf lib",
    "check:audit": "yarn audit --groups dependencies",
    "check:format": "yarn -s format -c",
    "check:ts": "tsc --noEmit",
    "format": "prettier \"**/*.{css,js,json,md,scss,ts,yaml,yml}\"",
    "format:write": "yarn -s format --write",
    "lint:css": "stylelint \"./*.{css,scss}\"",
    "lint:ts": "tslint \"{src,test}/**/*.ts\"",
    "package": "npx vsce package",
    "preversion": "run-p check:* lint:* test:*:coverage",
    "test:unit": "jest",
    "test:unit:coverage": "jest --coverage",
    "version": "curl https://raw.githubusercontent.com/marp-team/actions/v1/lib/scripts/version.js | node && git add -A CHANGELOG.md",
    "vsce:publish": "npx vsce publish",
    "vscode:prepublish": "run-s preversion build",
    "watch": "rollup -w -c ./rollup.config.js"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^14.0.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^8.4.0",
    "@rollup/plugin-typescript": "^5.0.2",
    "@types/jest": "^26.0.7",
    "@types/lodash.debounce": "^4.0.6",
    "@types/markdown-it": "^10.0.1",
    "@types/vscode": "~1.43.0",
    "@types/yaml": "^1.9.7",
    "builtin-modules": "^3.1.0",
    "codecov": "^3.7.2",
    "dedent": "^0.7.0",
    "jest": "^26.1.0",
    "jest-junit": "^11.0.1",
    "lodash.debounce": "^4.0.8",
    "markdown-it": "^11.0.0",
    "nanoid": "^3.1.10",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "rehype-parse": "^7.0.1",
    "remark-parse": "^8.0.3",
    "rimraf": "^3.0.2",
    "rollup": "^2.23.0",
    "rollup-plugin-terser": "^6.1.0",
    "stylelint": "^13.6.1",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "ts-jest": "^26.1.3",
    "tslint": "^6.1.2",
    "tslint-config-airbnb": "^5.11.2",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "^3.9.7",
    "unified": "^9.1.0",
    "unist-util-visit": "^2.0.3",
    "yaml": "^1.10.0"
  },
  "dependencies": {
    "@marp-team/marp-cli": "^0.20.0",
    "@marp-team/marp-core": "^1.2.2",
    "axios": "^0.19.2"
  }
}
